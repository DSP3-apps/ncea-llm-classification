id: template_standard_flow
name: Template Standard Flow
environment:
  python_requirements_txt: requirements.txt
inputs:
  source:
    type: string
    default: ""
    is_chat_input: false
  title:
    type: string
    is_chat_input: false
    default: ""
  altTitle:
    type: string
    is_chat_input: false
  custodian:
    type: string
    default: ""
    is_chat_input: false
  topics:
    type: string
    default: ""
    is_chat_input: false
  keywords:
    type: string
    default: ""
    is_chat_input: false
  abstract:
    type: string
    default: ""
    is_chat_input: false
  lineage:
    type: string
    default: ""
    is_chat_input: false
outputs:
  id:
    type: string
    reference: ${generate_id_from_input.output}
  input:
    type: object
    reference: ${objectinator.output}
  output:
    type: list
    reference: ${back_classify.output}
nodes:
- name: generate_id_from_input
  type: python
  source:
    type: code
    path: generate_id_from_input.py
  inputs:
    input: ${catalogue_entry.output}
- name: catalogue_entry
  type: prompt
  source:
    type: code
    path: catalogue_prompt.jinja2
  inputs:
    source: ${inputs.source}
    title: ${inputs.title}
    altTitle: ${inputs.altTitle}
    custodian: ${inputs.custodian}
    topics: ${inputs.topics}
    keywords: ${inputs.keywords}
    abstract: ${inputs.abstract}
    lineage: ${inputs.lineage}
- name: objectinator
  type: python
  source:
    type: code
    path: objectinator.py
  inputs:
    input: ${catalogue_entry.output}
- name: read_instructions
  type: python
  source:
    type: code
    path: read_file.py
  inputs:
    file_path: prompts/instructions.txt
- name: read_rules
  type: python
  source:
    type: code
    path: read_file.py
  inputs:
    file_path: prompts/rules.txt
- name: common_prompt
  type: prompt
  source:
    type: code
    path: common_prompt.jinja2
  inputs:
    rules: ${read_rules.output}
    instructions: ${read_instructions.output}
- name: benefit_collection
  type: python
  source:
    type: code
    path: read_file.py
  inputs:
    file_path: ontology/ncea_collection_lvl1_002.ttl
- name: asset_collection
  type: python
  source:
    type: code
    path: read_file.py
  inputs:
    file_path: ontology/ncea_collection_lvl1_001.ttl
- name: valuation_collection
  type: python
  source:
    type: code
    path: read_file.py
  inputs:
    file_path: ontology/ncea_collection_lvl1_003.ttl
- name: pressure_collection
  type: python
  source:
    type: code
    path: read_file.py
  inputs:
    file_path: ontology/ncea_collection_lvl1_004.ttl
- name: benefit_classify
  type: llm
  source:
    type: code
    path: theme_prompt.jinja2
  inputs:
    deployment_name: GPT-4o-2024-1120_Global
    temperature: 1
    top_p: 1
    response_format:
      type: json_object
    catalogue_entry: ${catalogue_entry.output}
    common_prompt: ${common_prompt.output}
    ontology: ${benefit_collection.output}
  provider: AzureOpenAI
  connection: andre-m6qjiuui-eastus2
  api: chat
  module: promptflow.tools.aoai
  use_variants: false
- name: asset_classify
  type: custom_llm
  source:
    type: package_with_prompt
    tool: promptflow.tools.llm.llm
    path: theme_prompt.jinja2
  inputs:
    connection: andre-m6qjiuui-eastus2
    api: chat
    deployment_name: GPT-4o-2024-1120_Global
    response_format:
      type: json_object
    common_prompt: ${common_prompt.output}
    catalogue_entry: ${catalogue_entry.output}
    ontology: ${asset_collection.output}
- name: valuation_classify
  type: custom_llm
  source:
    type: package_with_prompt
    tool: promptflow.tools.llm.llm
    path: theme_prompt.jinja2
  inputs:
    connection: andre-m6qjiuui-eastus2
    api: chat
    deployment_name: GPT-4o-2024-1120_Global
    response_format:
      type: json_object
    common_prompt: ${common_prompt.output}
    catalogue_entry: ${catalogue_entry.output}
    ontology: ${valuation_collection.output}
- name: pressure_classify
  type: custom_llm
  source:
    type: package_with_prompt
    tool: promptflow.tools.llm.llm
    path: theme_prompt.jinja2
  inputs:
    connection: andre-m6qjiuui-eastus2
    api: chat
    deployment_name: GPT-4o-2024-1120_Global
    response_format:
      type: json_object
    common_prompt: ${common_prompt.output}
    catalogue_entry: ${catalogue_entry.output}
    ontology: ${pressure_collection.output}
- name: collate_predictions
  type: python
  source:
    type: code
    path: collate_predictions.py
  inputs:
    asset: ${asset_classify.output}
    benefit: ${benefit_classify.output}
    pressure: ${pressure_classify.output}
    valuation: ${valuation_classify.output}
- name: back_classify
  type: python
  source:
    type: code
    path: back_classify.py
  inputs:
    predictions: ${collate_predictions.output}
    asset: ${asset_collection.output}
    valuation: ${valuation_collection.output}
    benefit: ${benefit_collection.output}
    pressure: ${pressure_collection.output}
